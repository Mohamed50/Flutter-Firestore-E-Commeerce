// Mocks generated by Mockito 5.0.16 from annotations
// in getx_example/test/auth-view-model-test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_login_facebook/flutter_login_facebook.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFacebookLoginResult_0 extends _i1.Fake
    implements _i2.FacebookLoginResult {}

/// A class which mocks [FacebookLogin].
///
/// See the documentation for Mockito's code generation for more information.
class MockFacebookLogin extends _i1.Mock implements _i2.FacebookLogin {
  MockFacebookLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get debug =>
      (super.noSuchMethod(Invocation.getter(#debug), returnValue: false)
          as bool);
  @override
  _i3.Future<_i2.FacebookAccessToken?> get accessToken =>
      (super.noSuchMethod(Invocation.getter(#accessToken),
              returnValue: Future<_i2.FacebookAccessToken?>.value())
          as _i3.Future<_i2.FacebookAccessToken?>);
  @override
  _i3.Future<String> get sdkVersion =>
      (super.noSuchMethod(Invocation.getter(#sdkVersion),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<bool> get isLoggedIn =>
      (super.noSuchMethod(Invocation.getter(#isLoggedIn),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<_i2.FacebookUserProfile?> getUserProfile() =>
      (super.noSuchMethod(Invocation.method(#getUserProfile, []),
              returnValue: Future<_i2.FacebookUserProfile?>.value())
          as _i3.Future<_i2.FacebookUserProfile?>);
  @override
  _i3.Future<String?> getProfileImageUrl({int? width, int? height}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getProfileImageUrl, [], {#width: width, #height: height}),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<String?> getUserEmail() =>
      (super.noSuchMethod(Invocation.method(#getUserEmail, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<_i2.FacebookLoginResult> logIn(
          {List<_i2.FacebookPermission>? permissions = const [
            _i2.FacebookPermission.publicProfile
          ],
          List<String>? customPermissions = const []}) =>
      (super.noSuchMethod(
              Invocation.method(#logIn, [], {
                #permissions: permissions,
                #customPermissions: customPermissions
              }),
              returnValue: Future<_i2.FacebookLoginResult>.value(
                  _FakeFacebookLoginResult_0()))
          as _i3.Future<_i2.FacebookLoginResult>);
  @override
  _i3.Future<_i2.FacebookLoginResult> expressLogin() =>
      (super.noSuchMethod(Invocation.method(#expressLogin, []),
              returnValue: Future<_i2.FacebookLoginResult>.value(
                  _FakeFacebookLoginResult_0()))
          as _i3.Future<_i2.FacebookLoginResult>);
  @override
  _i3.Future<void> logOut() =>
      (super.noSuchMethod(Invocation.method(#logOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
